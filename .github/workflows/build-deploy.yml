name: Build and deploy

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'master'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Maven Package
        run: ./mvnw clean package -DskipTests=false

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Рабочий вариант
#      - name: Copy code to server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SERVER_IP_ADDRESS }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
#          source: "."
#          target: "/home/${{ secrets.SERVER_USERNAME }}/app"

      # Нерабочий вариант
#      - name: Execute Docker Compose on server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SERVER_IP_ADDRESS }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
#          script: |
#            cd /home/${{ secrets.SERVER_USERNAME }}/app
#            docker-compose pull
#            docker-compose down
#            docker-compose up -d

      # Нерабочий вариант
      # https://github.com/marketplace/actions/ssh-command
#      - name: Execute Docker Compose on server
#        uses: D3rHase/ssh-command-action@latest
#        with:
#          host: ${{ secrets.SERVER_IP_ADDRESS }}
#          port: "22"
#          user: ${{ secrets.SERVER_USERNAME }}
#          private_key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
##          host_fingerprint: ${{ secrets.HOST_FINGERPRINT }}
#          command: |
#            cd /home/${{ secrets.SERVER_USERNAME }}/app
#            docker-compose down
#            docker-compose up -d

      # Рабочий вариант
      - name: Setup ssh
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}

      # Проверяем
      - name: Copy files to remote server
        run: |
          scp -o StrictHostKeyChecking=no -r ./* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP_ADDRESS }}:/home/${{ secrets.SERVER_USERNAME }}/app

      # Рабочий вариант
      - name: Run Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP_ADDRESS }} 'cd /home/${{ secrets.SERVER_USERNAME }}/app && docker-compose down && docker compose up -d'